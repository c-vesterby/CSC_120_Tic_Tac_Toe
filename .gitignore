*.ini

'''import itertools

def game_board(game_map, player=0, row="-", column="-", just_display=False):
    if game_map[row][column] == "X" or "O":
        print("Invalid location")
        return game_map, False
    if not just_display:
        game_map[row][column] = player
    for count, row in enumerate(game_map):
        print(count, row)
    return game_map, True
       

def win(tic_tac_toe_game):
    for row in board:
            print(row)
            if row.count(row[0]) == len(row) and row [0] != 0:
                print("Winner!")
                return True
                
    for col in range(len(board)):
        check = []

        for row in board:
            check.append(row[col])

        if row.count(row[0]) == len(row) and row [0] != ("-"):
                print("Winner!")
                return True

    diag = []
    for col, row in enumerate(reversed(range(len(board)))):
        diag.append(board[row][col])
    if diag.count(diag[0]) == len(diag) and diag [0] != 0:
                print("Winner!")
                return True

    diag = []
    for ix in range(len(board)):
        diag.append(board[ix][ix])
    if diag.count(diag[0]) == len(diag) and diag [0] != 0:
                print("Winner!")
                return True
    return False       

play = True
players = [1,2]
player_1 = "X"
player_2 = "O"
while play:
    board = [["-","-","-"],
             ["-","-","-"],
             ["-","-","-"],]
    print(board)
    game_won = False
    player_choice = itertools.cycle([1,2])
    while not game_won:
        current_player = next(player_choice)
        print(f"Current Player: {current_player}")
        played = False
         
        while not played:
            column_choice = int(input("Choose the column you would like to play?: "))
            row_choice = int(input("Choose the row you would like to play?: "))
            board = game_board(board, current_player, row_choice, column_choice)

            


        if win(board):
            game_won = True

'''
#game_board() 
#win(board)

'''  
cols = list(reversed(range(len(board))))
rows = range(len(board))

for row in board:
        print(row)
'''

#def printBoard(board):
#    for i in range(len(board)):
#        row = ''
#        for j in range (len(board[i])):
#            row = row + "[" + board[i][j] + "]"
#       print(row)

# # list.append(l1)
# # list.append(l2)
# # list.append(l3)

# # print(list)

# # for i in range(3):
#  #   list.append([])
#    # for j in range(3):
#       #  list[i].append(j)


# for i in range(3):
#     row = []
#     for j in range(3):
#         row.append("_")
